<Window x:Class="LegalQuiz2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LegalQuiz2"
        mc:Ignorable="d"
        Title="Quiz Generator" Height="800" Width="1200" WindowStartupLocation="CenterScreen" Icon="/Resources/Legal.jpg" FontFamily="Times New Roman" FontSize="14" ResizeMode="CanResize" SizeToContent="Manual">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="10,10,10,10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>           
        </Style>
        <Style x:Key="PrintButton" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="10,10,10,10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
    </Window.Resources>
    <Grid x:Name="GD">
        <Grid.RowDefinitions>
            <RowDefinition Height="100">
            </RowDefinition>
            <RowDefinition>
            </RowDefinition>
        </Grid.RowDefinitions>

        <StackPanel  Orientation="Horizontal" Margin="10,10,10,10">
            <Button x:Name="Button_Back" Style="{DynamicResource RoundedButtonStyle}" Height="60" Width="60" Padding="2" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,10,30,10" Click="Button_Back_Click" FontSize="18" FontWeight="Bold">
                <Button.Background>
                    <ImageBrush ImageSource="/Resources/back64.png"></ImageBrush>
                </Button.Background>
            </Button>

            <Button x:Name="Button_Print" Style="{DynamicResource RoundedButtonStyle}" Height="60" Width="60"  Padding="5,5,5,5" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,30,10" Click="Button_Print_Click" FontSize="18" FontWeight="Bold">
                <Button.Background>
                    <ImageBrush  ImageSource="/Resources/printer.png"></ImageBrush>
                </Button.Background>
            </Button>

            <Button x:Name="Button_Next" Style="{DynamicResource RoundedButtonStyle}" Height="60" Width="60"  Padding="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,30,10" Click="Button_Next_Click" FontSize="18" FontWeight="Bold">
                <Button.Background >
                    <ImageBrush ImageSource="/Resources/next64.png"></ImageBrush>
                </Button.Background>               
            </Button>
        </StackPanel>
        <Button x:Name="Button_Uz" Style="{DynamicResource RoundedButtonStyle}" Content="O'zbek tili" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="2,2,2,2" Padding="30,15,30,15" ClipToBounds="True" Cursor="Arrow" BorderBrush="#FF607DEF" Foreground="#FF2D3E25" FontSize="20" Click="Button_Click_Uz" Margin="0,0,0,75" Grid.Row="1" />
        <Button x:Name="Button_Ru" Style="{DynamicResource RoundedButtonStyle}" Content="Русский язык" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="2,2,2,2" Padding="15,15,15,15" ClipToBounds="True" Cursor="Arrow" BorderBrush="#FF607DEF" Foreground="#FF2D3E25" FontSize="20" Click="Button_Click_Ru" Margin="0,75,0,0" Grid.Row="1" />


        <ProgressBar x:Name="PB_1" Grid.Row="1" Orientation="Horizontal" Value="{Binding WorkerState}" Margin="50,0,50,20" Height="20" VerticalAlignment="Bottom" Minimum="0" Maximum="100" Grid.ColumnSpan="3"/>
        <TextBlock x:Name="Text_Prosent" Grid.Row="1" Text="{Binding ElementName = PB_1, Path=Value, StringFormat={}{0:0}%}" FontSize="18" HorizontalAlignment="Center" Margin="0,0,0,20" RenderTransformOrigin="0.386,1.838" Height="20" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Grid.Column="1"/>
        <TextBox x:Name="Text_Center"  VerticalAlignment="Center" IsReadOnly="True"  TextWrapping="WrapWithOverflow" Margin="20,20,20,20" Padding="10,10,10,10" Text="TextBox" FontSize="20" FontWeight="Bold" ScrollViewer.CanContentScroll="True" Grid.Row="1"/>
        <TextBox x:Name="Text_Variant" Grid.Row="0" HorizontalAlignment="Center" IsReadOnly="True" TextWrapping="WrapWithOverflow" Padding="10,10,10,10" Text="TextBox" FontSize="20" FontWeight="Bold" Margin="0,40,0,0" VerticalAlignment="Top"/>
        <ListBox x:Name="Text_All" Margin="10,0,10,10" Grid.Row="1" d:ItemsSource="{d:SampleData ItemCount=5}" FontSize="20" FontWeight="Bold" d:IsHidden="True"/>

    </Grid>
</Window>
